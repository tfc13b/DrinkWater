{"ast":null,"code":"var _jsxFileName = \"/Users/timcarver/drinkwater/src/App.js\";\n//import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from \"react\";\nimport setTime from './setTime';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://rm7ix2r8hzo4121x321k81m1-wpengine.netdna-ssl.com/wp-content/uploads/2020/08/Children-and-Water-Content-1024x536.jpg\",\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        onLoad: notifyMe(),\n        children: \"Drink water!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nconsole.log(Notification.permission);\n\nfunction notifyMe() {\n  if (!window.Notification) {\n    console.log('Browser does not support notifications.');\n  } else {\n    // check if permission is already granted\n    if (Notification.permission === 'granted') {\n      // show notification here\n      var notify = new Notification('Hi there!', {\n        body: 'Drink More Water :)',\n        icon: 'https://rm7ix2r8hzo4121x321k81m1-wpengine.netdna-ssl.com/wp-content/uploads/2020/08/Children-and-Water-Content-1024x536.jpg'\n      });\n    } else {\n      // request permission from user\n      Notification.requestPermission().then(function (p) {\n        if (p === 'granted') {\n          // show notification here\n          var notify = new Notification('Hi there!', {\n            body: 'Dink More Water :)',\n            icon: 'https://rm7ix2r8hzo4121x321k81m1-wpengine.netdna-ssl.com/wp-content/uploads/2020/08/Children-and-Water-Content-1024x536.jpg'\n          });\n        } else {\n          console.log('User blocked notifications.');\n        }\n      }).catch(function (err) {\n        console.error(err);\n      });\n    }\n  }\n}\n\nconst AmountOfTimeToCheckInMs = 1000 * 60 * 60;\nconst PollingSpeedInMs = 1000;\n\nclass PersistentTimer {\n  constructor() {\n    //  ensure u have localStorage (can be done better).\n    if (!localStorage) {\n      console.log('localStorage not supported!');\n      return;\n    } //  get the timer element.\n\n\n    this.timerElement = document.querySelector('#timer'); //  get the localStorage variable.\n\n    this.timerValue = localStorage.getItem('timerValue'); //  if it's not set yet, set it.\n\n    if (!this.timerValue) {\n      this.resetTimer();\n    }\n\n    this.updateTimer();\n    setInterval(() => this.triggerEverySecond(), PollingSpeedInMs);\n  }\n\n  triggerEverySecond() {\n    this.updateTimer(); //  compare difference and check if it matches 1 hour (1000ms * 60s * 60m)\n\n    if (this.getTimeDifference() >= AmountOfTimeToCheckInMs) {\n      //  reset timer immediately.\n      this.resetTimer(); // do something..\n    }\n  }\n\n  resetTimer() {\n    this.timerValue = new Date().toString();\n    localStorage.setItem('timerValue', this.timerValue);\n  }\n\n  getTimeDifference() {\n    //  parse string date and get difference between now - old time in milliseconds.\n    return new Date().getTime() - new Date(this.timerValue).getTime();\n  }\n\n  updateTimer() {\n    let calculatedDiffDate = new Date();\n    calculatedDiffDate.setTime(AmountOfTimeToCheckInMs - this.getTimeDifference());\n    this.timerElement = calculatedDiffDate.getMinutes() + 'm ' + calculatedDiffDate.getSeconds() + 's';\n  }\n\n}\n\nnew PersistentTimer();\nconsole.log(PersistentTimer());\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/timcarver/drinkwater/src/App.js"],"names":["React","Component","setTime","App","notifyMe","console","log","Notification","permission","window","notify","body","icon","requestPermission","then","p","catch","err","error","AmountOfTimeToCheckInMs","PollingSpeedInMs","PersistentTimer","constructor","localStorage","timerElement","document","querySelector","timerValue","getItem","resetTimer","updateTimer","setInterval","triggerEverySecond","getTimeDifference","Date","toString","setItem","getTime","calculatedDiffDate","getMinutes","getSeconds"],"mappings":"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","sourcesContent":["//import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from \"react\";\nimport setTime from './setTime';\n\n\nfunction App() {\nreturn (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src=\"https://rm7ix2r8hzo4121x321k81m1-wpengine.netdna-ssl.com/wp-content/uploads/2020/08/Children-and-Water-Content-1024x536.jpg\" className=\"App-logo\" alt=\"logo\" />\n        <h1 onLoad={notifyMe()}>\n          Drink water!!\n        </h1>\n        <div>\n      </div>\n      </header>\n    </div>\n  );\n}\nconsole.log(Notification.permission)\nfunction notifyMe() {\n  if (!window.Notification) {\n      console.log('Browser does not support notifications.');\n  } else {\n      // check if permission is already granted\n      if (Notification.permission === 'granted') {\n          // show notification here\n          var notify = new Notification('Hi there!', {\n              body: 'Drink More Water :)',\n              icon: 'https://rm7ix2r8hzo4121x321k81m1-wpengine.netdna-ssl.com/wp-content/uploads/2020/08/Children-and-Water-Content-1024x536.jpg',\n          });\n      } else {\n          // request permission from user\n          Notification.requestPermission().then(function (p) {\n              if (p === 'granted') {\n                  // show notification here\n                  var notify = new Notification('Hi there!', {\n                      body: 'Dink More Water :)',\n                      icon: 'https://rm7ix2r8hzo4121x321k81m1-wpengine.netdna-ssl.com/wp-content/uploads/2020/08/Children-and-Water-Content-1024x536.jpg',\n                  });\n              } else {\n                  console.log('User blocked notifications.');\n              }\n          }).catch(function (err) {\n              console.error(err);\n          });\n      }\n  }\n}\nconst AmountOfTimeToCheckInMs = 1000 * 60 * 60;\nconst PollingSpeedInMs        = 1000;\n\nclass PersistentTimer\n{\n  constructor()\n  {\n    //  ensure u have localStorage (can be done better).\n    if (!localStorage)\n    {\n      console.log('localStorage not supported!');\n      return;\n    }\n\n    //  get the timer element.\n    this.timerElement = document.querySelector('#timer');\n\n    //  get the localStorage variable.\n    this.timerValue = localStorage.getItem('timerValue');\n\n    //  if it's not set yet, set it.\n    if (!this.timerValue)\n    {\n      this.resetTimer();\n    }\n\n    this.updateTimer();\n    setInterval(() => this.triggerEverySecond(), PollingSpeedInMs);\n  }\n\n  triggerEverySecond()\n  {\n    this.updateTimer();\n\n    //  compare difference and check if it matches 1 hour (1000ms * 60s * 60m)\n    if (this.getTimeDifference() >= AmountOfTimeToCheckInMs)\n    {\n      //  reset timer immediately.\n      this.resetTimer();\n\n      // do something..\n    }\n  }\n\n  resetTimer()\n  {\n    this.timerValue = new Date().toString();\n\n    localStorage.setItem('timerValue', this.timerValue);\n  }\n\n  getTimeDifference()\n  {\n    //  parse string date and get difference between now - old time in milliseconds.\n    return new Date().getTime() - new Date(this.timerValue).getTime();\n  }\n\n  updateTimer()\n  {\n    let calculatedDiffDate = new Date()\n    calculatedDiffDate.setTime(AmountOfTimeToCheckInMs - this.getTimeDifference());\n\n    this.timerElement = calculatedDiffDate.getMinutes() + 'm ' + calculatedDiffDate.getSeconds() + 's';\n  }\n}\n\nnew PersistentTimer();\n\nconsole.log(PersistentTimer());\nexport default App;\n"]},"metadata":{},"sourceType":"module"}